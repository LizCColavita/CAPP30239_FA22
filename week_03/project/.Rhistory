select(-term) %>%
kable(digits = 3)
# make dummy variables for location
for(i in 1:5){
data[sprintf("location_%d", i)] <- ifelse(data$location == i, 1, 0)}
vars_interest = c("population","mean_hh_income_2018","location_1","location_2","location_3","location_4","location_5")
# conduct balance tests on pre-treatment incomes, populations, and locations via regression
data %>%
select(vars_interest) %>%
lapply(., function(i) tidy(lm(i ~ data$sekowifi_winner))) %>%
do.call(rbind, .) %>%
rownames_to_column("Variable") %>%
filter(term==i) %>%
select(-term) %>%
kable(digits = 3)
# run the regression
lm(bank_ac ~ DL + DH + SL + SH, data = data) %>% tidy()
rm(list=ls())
library(tidyverse)
library(kableExtra)
library(stargazer)
library(broom)
library(psych)
library(jtools)
setwd("~/Downloads")
data <- read_csv("PS2b_Data.csv")
# create dummy/indicator variables mentioned in question 4
#treated and in low saturation cluster
data$DL <- ifelse(data$household_treatment == 1 & data$vsat == 35, 1, 0)
#treated and in high saturation cluster
data$DH <- ifelse(data$household_treatment == 1 & data$vsat == 70, 1, 0)
#control in low saturation cluster
data$SL <- ifelse(data$household_treatment == 0 & data$vsat == 35, 1, 0)
#control in high saturation cluster
data$SH <- ifelse(data$household_treatment == 0 & data$vsat == 70, 1, 0)
# run the regression
lm(bank_ac ~ DL + DH + SL + SH, data = data) %>% tidy()
(0.35*0.79435275) + (0.65*0.10382643)
(0.7 * 0.79094617) + (0.3 * 0.30931663)
## create subset of data
data35 <- data[data$vsat == 35,]
View (data35)
0.6464573 - 0.3455106
## create subset of data
data35 <- data[data$vsat == 35,]
lm(bank_ac ~ household_treatment, data = data35) %>% tidy()
# PREAMBLE
cat("\014") # clear console
remove(list = ls()) # clear lists in memory
library(tidyverse) # data manipulation
library(stargazer) # clean way to show output
chickens <- read_csv('https://www.dropbox.com/s/xslb2qg8wtjk9cs/TA4_data.csv?dl=1')
view(chickens)
ols <- lm(Q~PCHICK+PBEEF+POP+CPI+Y,data=chickens)
first <- lm(PCHICK~PF+PBEEF+POP+CPI+Y, data=chickens)
predict_PCHICK = fitted(first)
second <-lm(Q~predict_PCHICK+PBEEF+POP+CPI+Y,data=chickens)
stargazer(ols,second,type="text")
install.packages("sqldf")
install.packages("haven")
install.packages(qualtRics)
install.packages('qualtRics')
install.packages(janitor)
install.packages('janitor')
qualtrics_api_credentials(api_key = "YsUPvQPDNExglVM2PQjuo9eYVRzl2XJJ1NDJLZ3b", base_url = "iad1.qualtrics.com", install = TRUE, overwrite = TRUE)
readRenviron("~/.Renviron")
surveys <- all_surveys()
library(sqldf)
library(haven)
library(qualtRics)
library(tidyverse)
library(janitor)
qualtrics_api_credentials(api_key = "YsUPvQPDNExglVM2PQjuo9eYVRzl2XJJ1NDJLZ3b", base_url = "iad1.qualtrics.com", install = TRUE, overwrite = TRUE)
readRenviron("~/.Renviron")
surveys <- all_surveys()
calvin <- sqldf("select * from surveys
where name like '%2022 ASR%'and
name like '%calvin%'")
calvin <- calvin <- fetch_survey(surveyID = calvin$id[1], convert=FALSE, force_request = TRUE)
names(calvin) <- gsub(x = names(calvin), pattern = "\\.", replacement = "_")
View(calvin)
undecided <- sqldf("select EndDate, RecipientLastName, RecipientFirstName, RecipientEmail from calvin where Q1_1 = 'I plan to attend college this Fall, but I still don't know where'")
View(undecided)
undecided <- sqldf("select EndDate, RecipientLastName, RecipientFirstName, RecipientEmail
from calvin
where Q1_1 = 'I plan to attend college this Fall, but I still don't know where'")
undecided <- sqldf("select * from calvin
where Q1_1 = 'I plan to attend college this Fall, but I still don't know where'")
undecided <- sqldf("select * from calvin)
undecided <- sqldf("select * from calvin")
undecided <- sqldf("select * from calvin")
View(undecided)
undecided <- sqldf("select EndDate from calvin")
View(undecided)
undecided <- sqldf("select EndDate, RecipientLastName, RecipientFirstName, RecipientEmail from calvin")
View(undecided)
undecided <- sqldf("select EndDate, RecipientLastName, RecipientFirstName, RecipientEmail from calvin
where Q1_1 = 'I plan to attend college this Fall, but I still don't know where'")
undecided <- sqldf("select EndDate, RecipientLastName, RecipientFirstName, RecipientEmail from calvin
where Q1_1 like '%but I still don't know where%'")
undecided <- sqldf("select EndDate, RecipientLastName, RecipientFirstName, RecipientEmail from calvin where Q1_1 == 'I plan to attend college this Fall, but I still don't know where'")
undecided <- sqldf("select EndDate, RecipientLastName, RecipientFirstName, RecipientEmail from calvin
where Q1_1 == 'I do not plan to attend college this Fall'")
View(undecided)
undecided <- sqldf("select EndDate, RecipientLastName, RecipientFirstName, RecipientEmail from calvin
where Q1_1 == 'I plan to attend college this Fall, but I still don't know where'")
undecided <- sqldf("select EndDate, RecipientLastName, RecipientFirstName, RecipientEmail from calvin
where Q1_1 like '%I plan to attend college this Fall, but%'")
View(undecided)
undecided <- sqldf("select EndDate, RecipientLastName, RecipientFirstName, RecipientEmail from calvin
where Q1_1 = 'I plan to attend college this Fall, but I still dont know where'")
View(undecided)
undecided <- sqldf("select EndDate, RecipientLastName, RecipientFirstName, RecipientEmail from calvin
where Q1_1 like '%I plan to attend college this Fall, but%'")
View(calvin)
diffdecision <- sqldf("select EndDate, RecipientLastName, RecipientFirstName, RecipientEmail from calvin
where Q1_1 like '%I plan to attend college this Fall, but%' or Q2_14 = 'Q2_14 = Not certain that I made the right decision'")
View(diffdecision)
diffdecision <- sqldf("select EndDate, RecipientLastName, RecipientFirstName, RecipientEmail from calvin
where Q1_1 like '%I plan to attend college this Fall, but%' or Q2_14 = 'Not certain that I made the right decision'")
View(diffdecision)
diffdecision <- sqldf("select EndDate, RecipientLastName, RecipientFirstName, RecipientEmail from calvin
where Q1_1 like '%I plan to attend college this Fall, but%' or Q2_14 = 'Not certain that I made the right decision.'")
View(diffdecision)
wire <- sqldf("select EndDate, RecipientLastName, RecipientFirstName, RecipientEmail from calvin
where Q1_1 like '%I plan to attend college this Fall, but%'
or Q2_13 = 'Right down to the wire - as close to the notification deadline as possible'")
View(wire)
extra5000 <- sqldf("select EndDate, RecipientLastName, RecipientFirstName, RecipientEmail from calvin
where Q1_1 like '%I plan to attend college this Fall, but%'
or Q2_54 = 'Less than $5,000'")
View(extra5000)
undecided1 <- sqldf("select * from calvin
where Q1_1 like '%I plan to attend college this Fall, but%'")
View(undecided1)
View(extra5000)
rm(list=ls())
library(stargazer)
library(tidyverse)
rm(list=ls())
library(stargazer)
library(tidyverse)
rm(list=ls())
library(stargazer)
library(tidyverse)
setwd("~/Downloads")
data <- read_csv("PS4b_data.csv")
View(data)
nrow[data$funded = "Funded",]
nrow[data$funded == "Funded",]
nrow(data[data$funded == "Funded",])
data <- data %>%
mutate(pop_density <- population_1994 / size_1994)
View(data)
rm(list=ls())
library(stargazer)
library(tidyverse)
setwd("~/Downloads")
data <- read_csv("PS4b_data.csv")
data <- data %>%
mutate(pop_density = population_1994 / size_1994)
View(data)
# create population density variable
data <- data %>%
mutate(pop_density = population_1994 / size_1994)
# plot population density and outcome variable
ggplot(data, aes(pop_density, frac_public_transport) + geom_point())
# create population density variable
data <- data %>%
mutate(pop_density = population_1994 / size_1994)
# plot population density and outcome variable
ggplot(data, aes(pop_density, frac_public_transport)) + geom_point())
# create population density variable
data <- data %>%
mutate(pop_density = population_1994 / size_1994)
# plot population density and outcome variable
ggplot(data, aes(pop_density, frac_public_transport)) + geom_point()
# create population density variable
data <- data %>%
mutate(pop_density = population_1994 / size_1994)
# plot population density and outcome variable
ggplot(data, aes(pop_density, funded)) + geom_point()
# create population density variable
data <- data %>%
mutate(pop_density = population_1994 / size_1994)
# plot population density and outcome variable
ggplot(data, aes(pop_density, frac_public_transport)) + geom_point()
# create population density variable
data <- data %>%
mutate(pop_density = population_1994 / size_1994)
# plot population density and outcome variable
ggplot(data, aes(pop_density, funded)) + geom_point()
# create population density variable
data <- data %>%
mutate(pop_density = population_1994 / size_1994)
# plot population density and outcome variable
ggplot(data, aes(pop_density, funded)) +
geom_point() +
xlab("Population Density") +
ylab("Assignment to Treatment")
min(data[data$funded == "funded",])
min(data[data$funded == "funded"])
min(data[data$funded == "Funded",])
min(data[data$funded == "Funded"])
min(data[data$funded == "Funded", ])
data[data$funded == "Funded",]
min(data$funded[data$funded == "Funded", ])
min(data$pop_density[data$funded == "Funded",])
min(data[data$funded == "Funded", data$pop_density])
min(data$pop_density[data$funded == "Funded", data$pop_density])
data[data$funded == "Funded", data$pop_density]
data[data$pop_density, data$funded == "Funded"]
data[pop_density]
data["pop_density"]
data$pop_density[data$funded == "Funded",]
data$pop_density[data$funded == "Funded"]
min(data$pop_density[data$funded == "Funded"])
rd <- data %>%
filter(pop_density >= 8500 & pop_density <= 9500)
View(rd)
nrow(data[data$funded == "Funded",])
nrow(rd[rd$funded == "Funded",])
rd <- data %>%
filter(pop_density >= 8200 & pop_density <= 9500)
nrow(rd[rd$funded == "Funded",])
nrow(rd[rd$funded == "Funded",])
rd <- data %>%
filter(pop_density >= 8200 & pop_density <= 9800)
rd <- data %>%
filter(pop_density >= 8200 & pop_density <= 9800)
nrow(rd[rd$funded == "Funded",])
rd <- data %>%
filter(pop_density >= 8200 & pop_density <= 9800)
nrow(rd[rd$funded == "Not funded",])
rd <- data %>%
filter(pop_density >= 8500 & pop_density <= 9500)
nrow(rd[rd$funded == "Not funded",])
rd <- data %>%
filter(pop_density >= 8500 & pop_density <= 9500)
nrow(rd[rd$funded == "Funded",])
rd <- data %>%
filter(pop_density >= 8200 & pop_density <= 9500)
nrow(rd[rd$funded == "Funded",])
rd <- data %>%
filter(pop_density >= 8200 & pop_density <= 9500)
nrow(rd[rd$funded == "Not funded",])
rd <- data %>%
filter(pop_density >= 8500 & pop_density <= 9400)
nrow(rd[rd$funded == "Funded",])
rd <- data %>%
filter(pop_density >= 8500 & pop_density <= 9700)
nrow(rd[rd$funded == "Funded",])
rd <- data %>%
filter(pop_density >= 8500 & pop_density <= 9700)
ggplot(rd, aes(pop_density, frac_public_transport)) +
geompoint() +
xlab("Population Density") +
ylab("Fraction of Residents Who Used Public Transport in     2019")
rd <- data %>%
filter(pop_density >= 8500 & pop_density <= 9700)
ggplot(rd, aes(pop_density, frac_public_transport)) +
geom_point() +
xlab("Population Density") +
ylab("Fraction of Residents Who Used Public Transport in     2019")
data$treated <- ifelse(data$funded=="Yes",1,0)
plot(data$free_lunch,data$treated,ylab="Treated",xlab="Percent of students entitled to a free lunch")
# create population density variable
data <- data %>%
mutate(pop_density = population_1994 / size_1994) %>%
data$treated <- ifelse(data$funded=="Funded",1,0)
# create population density variable
data <- data %>%
mutate(pop_density = population_1994 / size_1994)
data$treated <- ifelse(data$funded=="Funded",1,0)
# plot population density and outcome variable
ggplot(data, aes(pop_density, funded)) +
geom_point() +
xlab("Population Density") +
ylab("Assignment to Treatment")
# create population density variable
data <- data %>%
mutate(pop_density = population_1994 / size_1994)
data$treated <- ifelse(data$funded=="Funded",1,0)
# plot population density and outcome variable
ggplot(data, aes(pop_density, treated) +
geom_point() +
xlab("Population Density") +
ylab("Assignment to Treatment")
# create population density variable and treatment variable
data <- data %>%
mutate(pop_density = population_1994 / size_1994)
data$treated <- ifelse(data$funded=="Funded",1,0)
# plot population density and outcome variable
plot(data$pop_density, data$treated, ylab = "Treated", xlab = "Population Density") +
# create population density variable and treatment variable
data <- data %>%
mutate(pop_density = population_1994 / size_1994)
data$treated <- ifelse(data$funded=="Funded",1,0)
# plot population density and outcome variable
plot(data$pop_density, data$treated, ylab = "Treated", xlab = "Population Density")
plot(data$pop_density, data$frac_public_transport, pch=3)
abline(v = 9145.917, col = "blue")
plot(data$pop_density, data$frac_public_transport, pch=3)
abline(v = 9145.917, col = "blue")
control <- subset(data, pop_density < 9145.917)
reg1<-lm(frac_public_transport ~ pop_density, data=control)
plot(data$pop_density, data$frac_public_transport, pch=3)
abline(v = 9145.917, col = "blue")
control <- subset(data, pop_density < 9145.917)
reg1 <- lm(frac_public_transport ~ pop_density, data=control)
abline(reg1,col="red")
treated <- subset(data, pop_density >= 9145.917)
reg2 <- lm(frac_public_transport ~ pop_density, data=treated)
abline(reg1,col="red")
plot(data$pop_density, data$frac_public_transport, pch=3)
abline(v = 9145.917, col = "blue")
control <- subset(data, pop_density < 9145.917)
reg1 <- lm(frac_public_transport ~ pop_density, data=control)
abline(reg1,col="red")
treated <- subset(data, pop_density >= 9145.917)
reg2 <- lm(frac_public_transport ~ pop_density, data=treated)
abline(reg1,col="green")
plot(data$pop_density, data$frac_public_transport, pch=3)
abline(v = 9145.917, col = "blue")
control <- subset(data, pop_density < 9145.917)
reg1 <- lm(frac_public_transport ~ pop_density, data=control)
abline(reg1,col="red")
treated <- subset(data, pop_density >= 9145.917)
reg2 <- lm(frac_public_transport ~ pop_density, data=treated)
abline(reg1,col="green")
plot(data$pop_density, data$frac_public_transport, pch=3)
abline(v = 9145.917, col = "blue")
control <- subset(data, pop_density < 9145.917)
reg1 <- lm(frac_public_transport ~ pop_density, data=control)
abline(reg1,col="red")
treated <- subset(data, pop_density >= 9145.917)
reg2 <- lm(frac_public_transport ~ pop_density, data=treated)
abline(reg2,col="green")
9145.917 - 1000
9145.917 - 5000
9145.917 - 10000
9145.917 + 5000
9145.917 + 10000
# narrow band +- 1000
band1 = subset(data,pop_density > 8145.917 & free_lunch <= 10145.917)
# narrow band +- 1000
band1 = subset(data,pop_density > 8145.917 & pop_density <= 10145.917)
est1 <- lm(frac_public_transport ~ treated, data=band1)
stargazer(est1,type="text")
# medium band +- 5000
band1 = subset(data,pop_density > 4145.917 & pop_density <= 14145.917)
est1 <- lm(frac_public_transport ~ treated, data=band2)
# narrow band +- 1000
band1 = subset(data,pop_density > 8145.917 & pop_density <= 10145.917)
est1 <- lm(frac_public_transport ~ treated, data=band1)
stargazer(est1,type="text")
# medium band +- 5000
band1 = subset(data,pop_density > 4145.917 & pop_density <= 14145.917)
est2 <- lm(frac_public_transport ~ treated, data=band2)
# narrow band +- 1000
band1 = subset(data,pop_density > 8145.917 & pop_density <= 10145.917)
est1 <- lm(frac_public_transport ~ treated, data=band1)
stargazer(est1,type="text")
# medium band +- 5000
band1 = subset(data,pop_density > 4145.917 & pop_density <= 14145.917)
est2 <- lm(frac_public_transport ~ treated, data=band2)
# narrow band +- 1000
band1 = subset(data,pop_density > 8145.917 & pop_density <= 10145.917)
est1 <- lm(frac_public_transport ~ treated, data=band1)
stargazer(est1,type="text")
# medium band +- 5000
band2 = subset(data,pop_density > 4145.917 & pop_density <= 14145.917)
est2 <- lm(frac_public_transport ~ treated, data=band2)
stargazer(est2,type="text")
# wide band +- 10,000
band3 = subset(data,pop_density > - -854.083 & pop_density <= 19145.917)
est3 <- lm(frac_public_transport ~ treated, data=band3)
stargazer(est3,type="text")
# narrow band +- 1000
band1 = subset(data,pop_density > 8145.917 & pop_density <= 10145.917)
est1 <- lm(frac_public_transport ~ treated, data=band1)
stargazer(est1,type="text")
# medium band +- 5000
band2 = subset(data,pop_density > 4145.917 & pop_density <= 14145.917)
est2 <- lm(frac_public_transport ~ treated, data=band2)
stargazer(est2,type="text")
# wide band +- 10,000
band3 = subset(data,pop_density > - -854.083 & pop_density <= 19145.917)
est3 <- lm(frac_public_transport ~ treated, data=band3)
stargazer(est1, est2, est3,type="text")
# narrow band +- 1000
band1 = subset(data,pop_density > 8145.917 & pop_density <= 10145.917)
est1 <- lm(frac_public_transport ~ treated, data=band1)
# medium band +- 5000
band2 = subset(data,pop_density > 4145.917 & pop_density <= 14145.917)
est2 <- lm(frac_public_transport ~ treated, data=band2)
# wide band +- 10,000
band3 = subset(data,pop_density > - -854.083 & pop_density <= 19145.917)
est3 <- lm(frac_public_transport ~ treated, data=band3)
stargazer(est1, est2, est3,type="text")
# narrow band +- 1000
band1 = subset(data,pop_density > 8145.917 & pop_density <= 10145.917)
est1 <- lm(frac_public_transport ~ treated, data=band1)
# medium band +- 5000
band2 = subset(data,pop_density > 4145.917 & pop_density <= 14145.917)
est2 <- lm(frac_public_transport ~ treated, data=band2)
# wide band +- 10,000
band3 = subset(data,pop_density > -854.083 & pop_density <= 19145.917)
est3 <- lm(frac_public_transport ~ treated, data=band3)
stargazer(est1, est2, est3,type="text")
hist(data$pop_density, breaks = 30)
abline(v = 9145.917, col = 'blue')
hist(data$pop_density, breaks = 50)
abline(v = 9145.917, col = 'blue')
hist(data$pop_density, breaks = 30)
abline(v = 9145.917, col = 'blue')
plot(data$size_1994, data$population_1994, pch = 3)
abline(v = 9145.917, col = 'blue')
plot(data$size_1994, data$population_1994, pch = 3)
abline(v = 9145.917, col = 'blue')
reg3 <- lm(population_1994 ~ size_1994, data = control)
abline(reg3,col="red")
reg4 <- lm(population_1994 ~ size_1994, data = treatment)
plot(data$size_1994, data$population_1994, pch = 3)
abline(v = 9145.917, col = 'blue')
reg3 <- lm(population_1994 ~ size_1994, data = control)
abline(reg3,col="red")
reg4 <- lm(population_1994 ~ size_1994, data = treated)
abline(reg4,col="green")
plot(data$size_1994, data$population_1994, pch = 3)
abline(v = 9145.917, col = 'blue')
reg3 <- lm(population_1994 ~ size_1994, data = control)
abline(reg3,col="red")
reg4 <- lm(population_1994 ~ size_1994, data = treated)
abline(reg4,col="green")
plot(data$pop_density, data$population_1994, pch = 3)
abline(v = 9145.917, col = 'blue')
reg3 <- lm(population_1994 ~ pop_density, data = control)
abline(reg3,col="red")
reg4 <- lm(population_1994 ~ pop_density, data = treated)
abline(reg4,col="green")
# size as a covariate
plot(data$pop_density, data$size_1994, pch = 3)
abline(v = 9145.917, col = 'blue')
reg3 <- lm(size_1994 ~ pop_density, data = control)
abline(reg3,col="red")
reg4 <- lm(size_1994 ~ pop_density, data = treated)
abline(reg4,col="green")
rm(list=ls())
library(stargazer)
library(tidyverse)
setwd("~/Downloads")
data <- read_csv("PS4b_data.csv")
# create population density variable and treatment variable
data <- data %>%
mutate(pop_density = population_1994 / size_1994)
data$treated <- ifelse(data$funded=="Funded",1,0)
# plot population density and outcome variable
plot(data$pop_density, data$treated, ylab = "Treated", xlab = "Population Density")
plot(data$pop_density, data$frac_public_transport, pch=3)
abline(v = 9145.917, col = "blue")
control <- subset(data, pop_density < 9145.917)
reg1 <- lm(frac_public_transport ~ pop_density, data=control)
abline(reg1,col="red")
treated <- subset(data, pop_density >= 9145.917)
reg2 <- lm(frac_public_transport ~ pop_density, data=treated)
abline(reg2,col="green")
# narrow band +- 1000
band1 = subset(data,pop_density > 8145.917 & pop_density <= 10145.917)
est1 <- lm(frac_public_transport ~ treated, data=band1)
# medium band +- 5000
band2 = subset(data,pop_density > 4145.917 & pop_density <= 14145.917)
est2 <- lm(frac_public_transport ~ treated, data=band2)
# wide band +- 10,000
band3 = subset(data,pop_density > -854.083 & pop_density <= 19145.917)
est3 <- lm(frac_public_transport ~ treated, data=band3)
stargazer(est1, est2, est3,type="text")
hist(data$pop_density, breaks = 30)
abline(v = 9145.917, col = 'blue')
# population as a covariate
plot(data$pop_density, data$population_1994, pch = 3)
abline(v = 9145.917, col = 'blue')
reg3 <- lm(population_1994 ~ pop_density, data = control)
abline(reg3,col="red")
reg4 <- lm(population_1994 ~ pop_density, data = treated)
abline(reg4,col="green")
# size as a covariate
plot(data$pop_density, data$size_1994, pch = 3)
abline(v = 9145.917, col = 'blue')
reg5 <- lm(size_1994 ~ pop_density, data = control)
abline(reg5,col="red")
reg6 <- lm(size_1994 ~ pop_density, data = treated)
abline(reg6,col="green")
# UNH input features
|               | MSE          | R-squared |
\begin{table}[]
setwd("~/CAPP30239_FA22/week_03/project")
library(haven)
library(tidyverse)
data <- read_csv("sports-political-donations.csv")
library(haven)
library(tidyverse)
data <- read_csv("sports-political-donations.csv")
affiliations <- unique(data$Party)
affiliations
nrow(data[data$League == "WNBA",])
nrow(data[data$League != "WNBA",])
temp <- data %>% filter(Owner == "Gayle Benson")
View(temp)
temp <- data %>% filter(Owner == "Jeanie Buss")
temp <- data %>% filter(Owner == "Renee Montgomery")
View(data)
